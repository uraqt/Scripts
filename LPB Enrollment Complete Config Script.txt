#!/bin/bash
#1/20/2016 X.10.11  V10
# 1/20/2016 added onedrive
# 1/20/2016 removed Fix for long log in time, it broke wireless and removed script for adding RootCA
# 2/22/2016 added EPO for EPO POC, one drive and Lync…
# 3/14/2016 removind AD for LP POC
# 4/16/2018 updated for legal text and gen inprovemnts

#Stall for user load in DEP 
dockStatus=$(pgrep -x Dock)


echo "Waiting for Desktop..."

while [[ "$dockStatus" == "" ]]
do
  echo "Desktop is not loaded. Waiting."
  sleep 5
  dockStatus=$(pgrep -x Dock)
done


#Setting volume to 30%
osascript -e "set volume output volume 30"

say installing net scope
# Event to install Netskope
/usr/local/bin/jamf policy -event NS

su - $3 open /System/Library/CoreServices/Menu\ Extras/Bluetooth.menu


pwpolicy -u $3 -setpolicy "newPasswordRequired=1"

# looking for all netowk conections, sometime thunderbolt adapters are missed
/usr/sbin/networksetup -detectnewhardware

Sleep 5

# Dummy package with image date and OS
TD=`date +"%Y %m"`
OS=Sierra
touch /Library/Application\ Support/JAMF/Receipts/"$OS Imaged $TD".pkg

# Event to install install McAffe agent
/usr/local/bin/jamf policy -event EPO

Sleep 5 

# Getting username
SN=`ls /Users | grep -v Shared | grep -v .localized | grep -v _mbsetupuser |grep -v .DS_Store`

UPN="$SN@juniper.net"

/usr/libexec/PlistBuddy -c "add OfficeActivationEmailAddress string $UPN" /Users/$SN/Library/Preferences/com.microsoft.office.plist
/usr/libexec/PlistBuddy -c "add OfficeAutoSignIn bool TRUE" /Users/$SN/Library/Preferences/com.microsoft.office.plist
/usr/libexec/PlistBuddy -c "add userName string $UPN" /Users/$SN/Library/Preferences/com.microsoft.SkypeForBusiness.plist
/usr/libexec/PlistBuddy -c "add sipAddress string $UPN" /Users/$SN/Library/Preferences/com.microsoft.SkypeForBusiness.plist


#To sync Ldap data to JSS 
sudo jamf recon -endUsername $UPN
#sudo jamf recon -email $UPN

# Adds user to the admin group based short name.
#sudo dseditgroup -o edit -a $SN -t user admin

#sleep 10

# Stopping syslog to edit
#sudo launchctl unload /System/Library/LaunchDaemons/com.apple.syslogd.plist

#Adding sshd module to syslog need for full CIS syslog fowarding
#syslog -module com.openssh.sshd enable 1

# Restarting syslog
#sudo launchctl load /System/Library/LaunchDaemons/com.apple.syslogd.plist


# Event to install McAfee agent
/usr/local/bin/jamf policy -event EPO1

# Creating machine name

# Getting Hardware type
HW=`sysctl hw.model |cut -c9-21| sed 's/[0-9 : . ,]*//g'`

if [[ "$HW" == "MacBookPro" ]]; then
MCN=$SN-mbp
elif [[ "$HW" == "MacBookAir" ]]; then
MCN=$SN-mba
else
MCN=$SN-ambp
fi


# Replacing computer name
scutil --set HostName $MCN
scutil --set ComputerName $MCN
scutil --set LocalHostName $MCN

#To sync Ldap data to JSS 
sudo jamf recon

sleep 5

say Installing McAfee.
say Threat.
say prevention


# Creating AD flag for Mac Mailing list
#dscl -u _macintosh_ldap_svcs -P bul1quRypivWhiydom9mdaesereDo5 /Active\ Directory/JNPR/All\ Domains -append /Users/$SN apple-webloguri OSXCTG1

# creating AD Flag for Mac Machine group
#dscl -u _macintosh_ldap_svcs -P bul1quRypivWhiydom9mdaesereDo5 /Active\ Directory/JNPR/All\ Domains -append /Computers/$MCN extensionAttribute1 OSXClient1

# Computer wide settings CIS and InfoSec
defaults write /Library/Preferences/com.apple.RemoteManagement LoadRemoteManagementMenuExtra -bool True
defaults write /Library/Preferences/com.apple.Bluetooth BluetoothAutoSeekHIDDevices -bool False
defaults write /Library/Preferences/com.apple.Bluetooth ControllerPowerState -bool False
defaults write /Library/Preferences/com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool True
defaults write /Library/Preferences/com.apple.alf globalstate -int 1 
defaults write /Library/Preferences/.GlobalPreferences PMPrintingExpandedStateForPrint -bool TRUE
defaults write /Library/Preferences/com.apple.driver.AppleIRController DeviceEnabled -bool no
defaults write /Library/Preferences/com.apple.AppleFileServer guestAccess -bool no
defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server AllowGuestAccess -bool no
defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName
defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo IPAddress
defaults write /Library/Preferences/com.apple.loginwindow Hide500Users -bool True


# Set screen sleep 20 min CIS and InfoSec.
sudo pmset -b displaysleep 20
sudo pmset -c displaysleep 20

# Set wake for access off CIS and InfoSec.
sudo pmset -c womp 0

# Getting username
velo=`ls /Users | grep -v admin | grep -v Shared | grep -v .localized | grep -v _mbsetupuser | grep -v .DS_Store`


# Setting ARD menuextra on CIS and InfoSec.
System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -configure -clientopts -setmenuextra -menuextra yes

# CIS 2.8 Enable Secure Keyboard Entry in terminal.app
/usr/libexec/PlistBuddy -c "add SecureKeyboardEntry bool True" /Users/$velo/Library/Preferences/com.apple.Terminal.plist

# EmptyTrashSecurely CIS and InfoSec.
/usr/libexec/PlistBuddy -c "add EmptyTrashSecurely bool True" /Users/$velo/Library/Preferences/com.apple.finder.plist

# Setting bottom left corner to start screensver CIS and InfoSec.
/usr/libexec/PlistBuddy -c "add wvous-bl-corner integer 5" /Users/$velo/Library/Preferences/com.apple.dock.plist
/usr/libexec/PlistBuddy -c "add wvous-bl-modifier integer 0" /Users/$velo/Library/Preferences/com.apple.dock.plist

# Setting keyboard to tab all 
/usr/libexec/PlistBuddy -c "add AppleKeyboardUIMode integer 2" /Users/$velo/Library/Preferences/.GlobalPreferences.plist

# Getting UUID for byhost plists
UUID=`ioreg -rd1 -c IOPlatformExpertDevice | grep -i "UUID" | cut -c27-62 | awk {'print toupper()'}`

# Setting byhost to turn off auto 802.1X -network team Apple 802.1X is differnt than Juniper 802.1X
/usr/libexec/PlistBuddy -c "Add EthernetAutoConnect bool NO" /Users/$velo/Library/Preferences/ByHost/com.apple.network.eapolcontrol.$UUID.plist

# Activates the show all file extensions CIS and InfoSec.
/usr/libexec/PlistBuddy -c "add AppleShowAllExtensions bool True" /Users/$velo/Library/Preferences/.GlobalPreferences.plist


# Event to start casper FileVault
/usr/local/bin/jamf policy -event FDE


# Install cert
#security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /Users/Shared/certnew.cer

# Setting Wi-Fi to linklocal for Outlook Auth issues... 
networksetup -setv6linklocal Wi-Fi

sleep 5


# Access warning for the command line, creensaver and login window (CIS Requirement 1.2.3)

echo "###############################################################################
#                                                                             #
# This system is the property of Juniper Networks and is intended for         #
# authorized Juniper business use only.  In using this system, all users      #
# agree to and shall comply with the Acceptable Use Policy available on the   #
# corporate intranet.  To protect its information resources, business and     #
# personnel, Juniper monitors its systems, networks, and devices for purposes #
# of routine maintenance, performance and functionality, and to detect        #
# network-based security threats and violations of company policy and law.    #
# Any and all uses of this system and any information, including personal     #
# information, placed on or sent over this system may be monitored, recorded, #
# copied, audited, obtained, or disclosed to authorized personnel and third   #
# parties, and provided to government authorities where required,             #
# subject to applicable law.                                                  #
#                                                                             #
###############################################################################
" >> "/etc/motd"


# Set SSH defaults to be more stringent (CIS 1.4.14.8)
# Back up "/etc/sshd_config"
cp "/etc/sshd_config" "/etc/sshd_config-$(date +%Y-%m-%d)"

# Modify /etc/sshd_config CIS
perl -p -i -e 's/\#PermitRootLogin\ yes/PermitRootLogin\ no/g' "/etc/sshd_config"
perl -p -i -e 's/\#MaxAuthTries\ 6/MaxAuthTries\ 4/g' "/etc/sshd_config"
perl -p -i -e 's/\#ClientAliveInterval\ 0/ClientAliveInterval\ 300/g' "/etc/sshd_config"
perl -p -i -e 's/\#ClientAliveCountMax\ 3\ yes/ClientAliveCountMax\ 0/g' "/etc/sshd_config"
perl -p -i -e 's/\#LogLevel INFO/LogLevel\ VERBOSE/g' "/etc/sshd_config"

# Back up "/etc/newsyslog.conf"
cp "/etc/newsyslog.conf" "/etc/newsyslog.conf-$(date +%Y-%m-%d)"

# Increase the retention time for system.log and secure.log (CIS Requirement 1.7.1I)
perl -p -i -e 's/\/var\/log\/wtmp.*$/\/var\/log\/wtmp   \t\t\t640\ \ 31\    *\t\@hh24\ \J/g' "/etc/newsyslog.conf"
perl -p -i -e 's/appfirewall.log file_max=5M all_max=50M/appfirewall.log rotate=seq compress file_max=10M ttly=31/g' "/etc/asl.conf"
#system.log change
perl -p -i -e 's/file_max=5M all_max=50M/file_max=10M ttly=31/g' "/etc/asl.conf"
perl -p -i -e 's/format=bsd/format=bsd rotate=seq compress file_max=10M ttly=31/g' "/etc/asl/com.apple.install"
perl -p -i -e 's/rotate=seq file_max=5M all_max=20M/rotate=seq compress file_max=10M ttly=31/g' "/etc/asl/com.apple.authd"


Say Configuring Pulse
# Adding jnpr pulse config file
/Applications/Pulse\ Secure.app/Contents/Plugins/JamUI/jamCommand -importfile /Users/Shared/Components.jnprpreconfig


# Removing .plist so byhost .plist load
rm /Users/$velo/Library/Preferences/com.apple.systemuiserver.plist

# Removing installer .pkg files
# rm -r /Users/Shared/certnew.cer

# Install RSA
#installer -allowUntrusted -pkg /Users/Shared/RSA/RSASecurIDTokenAutoMac412x64.pkg -target /


# Access warning for the FV2 per InfoSec.
defaults write /Library/Preferences/com.apple.loginwindow LoginwindowText "JUNIPER NETWORKS PROPERTY-Unauthorized access is prohibited. Juniper monitors its network/devices for security threats and violations of laws & policies. Your use is subject to Acceptable Use Policy and may be disclosed to authorized parties, subject to applicable law."

## Fix for Wi-Fi remembering networks. For long log in times Casper checking for JSS
#perl -p -i -e 's|/usr/sbin/jamf hideRestore|/usr/sbin/jamf hideRestore\n\n/usr/sbin/networksetup -setnetworkserviceenabled Wi-Fi on|g' /Library/Application\ Support/JAMF/ManagementFrameworkScripts/loginhook.sh

#perl -p -i -e 's|\#!/bin/sh|#!/bin/sh\n\n/usr/sbin/networksetup -setnetworkserviceenabled Wi-Fi off|g' /Library/Application\ Support/JAMF/ManagementFrameworkScripts/logouthook.sh



# CIS 5.6 Require password for system wide system prefs.
security authorizationdb read system.preferences > /tmp/system.preferences.plist
/usr/libexec/PlistBuddy -c "Set :shared false" /tmp/system.preferences.plist
security authorizationdb write system.preferences < /tmp/system.preferences.plist

# CIS 3.3 audit_control flags setting. Steve Green approved ^-fa,^-fc,^-cl changes
#perl -p -i -e 's|flags:lo,aa|flags:lo,aa,ad,fd,fm,-all,^-fa,^-fc,^-cl|g' /private/etc/security/audit_control
#perl -p -i -e 's|filesz:2M|filesz:10M|g' /private/etc/security/audit_control
#perl -p -i -e 's|expire-after:10M|expire-after: 30d |g' /private/etc/security/audit_control


################################
#for 5 and 5 password lockout pwpolicy

echo "<dict>
 <key>policyCategoryAuthentication</key>
  <array>
   <dict>
    <key>policyContent</key>
     <string>(policyAttributeFailedAuthentications &lt; policyAttributeMaximumFailedAuthentications) OR (policyAttributeCurrentTime &gt; (policyAttributeLastFailedAuthenticationTime + autoEnableInSeconds))</string>
    <key>policyIdentifier</key>
     <string>Authentication Lockout</string>
    <key>policyParameters</key>
  <dict>
  <key>autoEnableInSeconds</key>
   <integer>300</integer>
   <key>policyAttributeMaximumFailedAuthentications</key>
   <integer>5</integer>
  </dict>
 </dict>
 
 </array>
</dict>" > /private/var/tmp/pwpolicy.plist

pwpolicy -u $velo -setaccountpolicies /private/var/tmp/pwpolicy.plist

#delete staged pwpolicy.plist
rm -f /private/var/tmp/pwpolicy.plist


# Changing ~ home read persions per CIS to 700
chmod 700 /Users/$velo



# set time to ntp.juniper.net
#systemsetup -setnetworktimeserver ntp.juniper.net

Sleep 2

#network time on CIS  X 2
systemsetup -setusingnetworktime on

# Firewall on stealthmode CIS
/usr/libexec/ApplicationFirewall/socketfilterfw --setstealthmode on

#ntp loop back CIS
echo -n -e "restrict lo\ninterface ignore wildcard\ninterface listen lo" >> /etc/ntp-restrict.conf



# Appending the following line to syslog.conf for syslog fowarding
#echo "*.*   @172.24.0.216:9997" >> /etc/syslog.conf

# Starting and stoping syslog.plist for syslog fowarding
#launchctl unload /System/Library/LaunchDaemons/com.apple.syslogd.plist
#sleep 3
#launchctl load -w /System/Library/LaunchDaemons/com.apple.syslogd.plist


# Setting DHCP client ID
BCN=`scutil --get HostName`

NE=`/usr/sbin/networksetup -listallhardwareports | grep -A 1 Wi-Fi | grep Device | cut -c 9-12`

if [[ "$NE" == "en1" ]]; then
networksetup -setdhcp Ethernet "$BCN"
networksetup -setdhcp Wi-Fi "$BCN"
elif [[ "$NE" == "en0" ]]; then
networksetup -setdhcp Wi-Fi "$BCN"
networksetup -setdhcp "Thunderbolt Ethernet" "$BCN"
else
echo error
fi

# Removing CTG branding - CTG
rm -r /Users/Shared/ProgressScreen.app

# Removing pulse config file - per network team file has passwords
rm /Users/Shared/Components.jnprpreconfig

pwpolicy -u $3 -setpolicy "newPasswordRequired=1"

# Run Recon to update JSS record with the new computer name created in the admin script
sudo jamf recon

# to re-enable JSS policies to run.
Sudo launchctl load /Library/LaunchDaemons/com.jamfsoftware.task.1.plist

# Removing McAfee installer
rm /Users/Shared/install.sh

#delete enroll profiles
sudo rm /Users/$SN/Downloads/enrollmentProfile.mobileconfig 
sudo rm /Users/$SN/Downloads/CA\ Certificate.mobileconfig 


#Setting volume to 30%
osascript -e "set volume output volume 30"
say cleaning up and rebooting 

#writing LaunchAgent for AutoCheck script
cat << EOF > /Library/LaunchDaemons/com.juniper.wipescript.plist
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>Label</key>
    <string>com.juniper.wipescript</string>
    <key>ProgramArguments</key>
    <array>
        <string>/Users/Shared/wipe.sh</string>
    </array>
    <key>RunAtLoad</key>
    <true/>
    
    <key>StartInterval</key>
	<integer>120</integer>
    
    <key>LaunchOnlyOnce</key>
	<true/>
</dict>
</plist>
EOF

chmod 644 /Library/LaunchDaemons/com.juniper.wipescript.plist
chown root:wheel /Library/LaunchDaemons/com.juniper.wipescript.plist



Sleep 5

# reboot
#sudo shutdown -r now

